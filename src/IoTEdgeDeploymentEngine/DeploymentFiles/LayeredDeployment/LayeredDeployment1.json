{
    "id": "aaa",
    "schemaVersion": null,
    "labels": {},
    "content": {
        "modulesContent": {
            "$edgeAgent": {
                "properties.desired.modules.OPCPublisher": {
                    "env": {},
                    "restartPolicy": "always",
                    "settings": {
                        "image": "mcr.microsoft.com/iotedge/opc-publisher:latest",
                        "createOptions": "{\n\t\"Hostname\": \"publisher\",\n\t\"Cmd\": [\n\t\t\"--aa\",\n\t\t\"--to\",\t\t\n\t\t\"--di=60\"\n\t]\n}"
                    },
                    "status": "running",
                    "type": "docker"
                }
            },
            "$edgeHub": {
                "properties.desired": {
                    "schemaVersion": "1.1",
                    "storeAndForwardConfiguration": {
                        "timeToLiveSecs": 7200
                    },
                    "routes": {
                        "SimulatedTemperatureSensorToIoTHub": {
                            "route": "FROM /messages/modules/SimulatedTemperatureSensor/* INTO $upstream"
                        }
                    }
                }
            },
            "OPCPublisher": {}
        }
    },
    "targetCondition": "tags.env='xxx'",
    "createdTimeUtc": "2022-11-08T15:36:23.1943461Z",
    "lastUpdatedTimeUtc": "2022-11-08T15:36:23.1943461Z",
    "priority": 1,
    "systemMetrics": {
        "results": {
            "targetedCount": 0,
            "appliedCount": 0,
            "reportedSuccessfulCount": 0,
            "reportedFailedCount": 0
        },
        "queries": {
            "targetedCount": "select deviceId from devices where capabilities.iotEdge = true and tags.env='xxx'",
            "appliedCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[aaa]].status = 'Applied'",
            "reportedSuccessfulCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[aaa]].status = 'Applied' and properties.desired.$version = properties.reported.lastDesiredVersion and properties.reported.lastDesiredStatus.code = 200",
            "reportedFailedCount": "select deviceId from devices.modules where moduleId = '$edgeAgent' and configurations.[[aaa]].status = 'Applied' and properties.desired.$version = properties.reported.lastDesiredVersion and properties.reported.lastDesiredStatus.code != 200"
        }
    },
    "metrics": {
        "results": {},
        "queries": {}
    },
    "etag": "MQ=="
}